<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
        PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">


<!-- 不使用namespace的话sql搜索定位会比较方便 -->
<mapper namespace="Operator">

    <resultMap id="RMOperator" type="com.pkit.model.Operator">
        <result property="id" column="id"/>
        <result property="loginName" column="login_name"/>
        <result property="password" column="password"/>
        <result property="realName" column="real_name"/>
        <result property="gender" column="gender"/>
        <result property="age" column="age"/>
        <result property="email" column="email"/>
        <result property="telephone" column="telephone"/>
        <result property="operatorType" column="operator_type"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="loginTime" column="login_time"/>
        <result property="loginIp" column="login_ip"/>
        <result property="errorCount" column="error_count"/>
        <result property="status" column="status"/>
    </resultMap>

    <!-- 用于select查询公用抽取的列 -->
    <sql id="Operator.columns">
	    <![CDATA[

			id,
			login_name,
			password,
			real_name,
			gender,
			age,
			email,
			telephone,
			operator_type,
			create_time,
			update_time,
			login_time,
			login_ip,
			error_count,
			status

        ]]>
	</sql>

    <insert id="Operator.insert" useGeneratedKeys="true" keyProperty="id">
        <selectKey resultType="long" keyProperty="id" order="AFTER" >
            SELECT @@IDENTITY
        </selectKey>
        <![CDATA[
        INSERT INTO t_operator (
        	   id ,
        	   login_name ,
        	   password ,
        	   real_name ,
        	   gender ,
        	   age ,
        	   email ,
        	   telephone ,
        	   operator_type ,
        	   create_time ,
        	   update_time ,
        	   login_time ,
        	   login_ip ,
        	   error_count ,
        	   status 
        ) VALUES (
            	#{id},
            	#{loginName},
            	#{password},
            	#{realName},
            	#{gender},
            	#{age},
            	#{email},
            	#{telephone},
            	#{operatorType},
            	#{createTime},
            	#{updateTime},
            	#{loginTime},
            	#{loginIp},
            	#{errorCount},
            	#{status}
        )
       ]]>

    </insert>

    <insert id="Operator.insertBatch" useGeneratedKeys="true" parameterType="java.util.List">
        <selectKey resultType="long" keyProperty="id" order="AFTER">
            SELECT LAST_INSERT_ID()
        </selectKey>
        INSERT INTO t_operator (
        	   id ,
        	   login_name ,
        	   password ,
        	   real_name ,
        	   gender ,
        	   age ,
        	   email ,
        	   telephone ,
        	   operator_type ,
        	   create_time ,
        	   update_time ,
        	   login_time ,
        	   login_ip ,
        	   error_count ,
        	   status
        )
        VALUES
        <foreach collection="list" item="item" index="index" separator="," >
        (
            	#{item.id},
            	#{item.loginName},
            	#{item.password},
            	#{item.realName},
            	#{item.gender},
            	#{item.age},
            	#{item.email},
            	#{item.telephone},
            	#{item.operatorType},
            	#{item.createTime},
            	#{item.updateTime},
            	#{item.loginTime},
            	#{item.loginIp},
            	#{item.errorCount},
            	#{item.status}
        )
        </foreach>

    </insert>

    <update id="Operator.update">
        UPDATE t_operator
        <set>
            <if test="@Ognl@isNotEmpty(loginName)">
                login_name = #{loginName},
            </if>
            <if test="@Ognl@isNotEmpty(password)">
                password = #{password},
            </if>
            <if test="@Ognl@isNotEmpty(realName)">
                real_name = #{realName},
            </if>
            <if test="@Ognl@isNotEmpty(gender)">
                gender = #{gender},
            </if>
            <if test="@Ognl@isNotEmpty(age)">
                age = #{age},
            </if>
            <if test="@Ognl@isNotEmpty(email)">
                email = #{email},
            </if>
            <if test="@Ognl@isNotEmpty(telephone)">
                telephone = #{telephone},
            </if>
            <if test="@Ognl@isNotEmpty(operatorType)">
                operator_type = #{operatorType},
            </if>
            <if test="@Ognl@isNotEmpty(createTime)">
                create_time = #{createTime},
            </if>
            <if test="@Ognl@isNotEmpty(updateTime)">
                update_time = #{updateTime},
            </if>
            <if test="@Ognl@isNotEmpty(loginTime)">
                login_time = #{loginTime},
            </if>
            <if test="@Ognl@isNotEmpty(loginIp)">
                login_ip = #{loginIp},
            </if>
            <if test="@Ognl@isNotEmpty(errorCount)">
                error_count = #{errorCount},
            </if>
            <if test="@Ognl@isNotEmpty(status)">
                status = #{status}
            </if>
        </set>
        WHERE
        id = #{id}
    </update>


    <update id="Operator.updateBatch" parameterType="java.util.List">
        <foreach collection="list" item="item" index="index" open="" close="" separator=";">
        UPDATE t_operator
        <set>
            <if test="@Ognl@isNotEmpty(item.loginName)">
                login_name = #{item.loginName},
            </if>
            <if test="@Ognl@isNotEmpty(item.password)">
                password = #{item.password},
            </if>
            <if test="@Ognl@isNotEmpty(item.realName)">
                real_name = #{item.realName},
            </if>
            <if test="@Ognl@isNotEmpty(item.gender)">
                gender = #{item.gender},
            </if>
            <if test="@Ognl@isNotEmpty(item.age)">
                age = #{item.age},
            </if>
            <if test="@Ognl@isNotEmpty(item.email)">
                email = #{item.email},
            </if>
            <if test="@Ognl@isNotEmpty(item.telephone)">
                telephone = #{item.telephone},
            </if>
            <if test="@Ognl@isNotEmpty(item.operatorType)">
                operator_type = #{item.operatorType},
            </if>
            <if test="@Ognl@isNotEmpty(item.createTime)">
                create_time = #{item.createTime},
            </if>
            <if test="@Ognl@isNotEmpty(item.updateTime)">
                update_time = #{item.updateTime},
            </if>
            <if test="@Ognl@isNotEmpty(item.loginTime)">
                login_time = #{item.loginTime},
            </if>
            <if test="@Ognl@isNotEmpty(item.loginIp)">
                login_ip = #{item.loginIp},
            </if>
            <if test="@Ognl@isNotEmpty(item.errorCount)">
                error_count = #{item.errorCount},
            </if>
            <if test="@Ognl@isNotEmpty(item.status)">
                status = #{item.status}
            </if>
        </set>
        WHERE id = #{item.id}
        </foreach>
    </update>



    <delete id="Operator.delete">
    <![CDATA[
        DELETE FROM t_operator WHERE id = #{id}
        ]]>
    </delete>

    <delete id="Operator.deleteByIds">
        DELETE FROM t_operator WHERE
        ID in
        <foreach collection="list" item="classList" open="(" separator="," close=")">
            #{classList}
        </foreach>
    </delete>

    <select id="Operator.findById" resultMap="RMOperator">
        SELECT
        <include refid="Operator.columns"/>
        <![CDATA[
		    FROM t_operator 
	        WHERE 
		        id = #{id} 
	    ]]>
    </select>

    <sql id="Operator.findPage.where">
        <!-- ognl访问静态方法的表达式 为@class@method(args),以下为调用rapid中的Ognl.isNotEmpty()方法,还有其它方法如isNotBlank()可以使用，具体请查看Ognl类 -->
        <where>

            <if test="@Ognl@isNotEmpty(id) ">
                AND id = #{id}
            </if>

            <if test="@Ognl@isNotEmpty(loginName) ">
                AND login_name LIKE CONCAT('%',#{loginName},'%')
            </if>

            <if test="@Ognl@isNotEmpty(password) ">
                AND password LIKE CONCAT('%',#{password},'%')
            </if>

            <if test="@Ognl@isNotEmpty(realName) ">
                AND real_name LIKE CONCAT('%',#{realName},'%')
            </if>

            <if test="@Ognl@isNotEmpty(gender) ">
                AND gender LIKE CONCAT('%',#{gender},'%')
            </if>

            <if test="@Ognl@isNotEmpty(age) ">
                AND age = #{age}
            </if>

            <if test="@Ognl@isNotEmpty(email) ">
                AND email LIKE CONCAT('%',#{email},'%')
            </if>

            <if test="@Ognl@isNotEmpty(telephone) ">
                AND telephone LIKE CONCAT('%',#{telephone},'%')
            </if>

            <if test="@Ognl@isNotEmpty(operatorType) ">
                AND operator_type = #{operatorType}
            </if>

            <if test="@Ognl@isNotEmpty(createTimeBegin)">
                AND create_time >= #{createTimeBegin}
            </if>
            <if test="@Ognl@isNotEmpty(createTimeEnd)">
                AND create_time &lt;= #{createTimeEnd}
            </if>
            <if test="@Ognl@isNotEmpty(updateTimeBegin)">
                AND update_time >= #{updateTimeBegin}
            </if>
            <if test="@Ognl@isNotEmpty(updateTimeEnd)">
                AND update_time &lt;= #{updateTimeEnd}
            </if>
            <if test="@Ognl@isNotEmpty(loginTimeBegin)">
                AND login_time >= #{loginTimeBegin}
            </if>
            <if test="@Ognl@isNotEmpty(loginTimeEnd)">
                AND login_time &lt;= #{loginTimeEnd}
            </if>
            <if test="@Ognl@isNotEmpty(loginIp) ">
                AND login_ip LIKE CONCAT('%',#{loginIp},'%')
            </if>
            <if test="@Ognl@isNotEmpty(errorCount) ">
                AND error_count = #{errorCount}
            </if>
            <if test="@Ognl@isNotEmpty(status) ">
                AND status = #{status}
            </if>

        </where>
    </sql>

    <select id="Operator.findPage.count" resultType="long">
        SELECT count(*) FROM t_operator
        <include refid="Operator.findPage.where"/>
    </select>

    <!--
    	分页查询已经使用Dialect进行分页,也可以不使用Dialect直接编写分页
    	因为分页查询将传 offset,pageSize,lastRows 三个参数,不同的数据库可以根于此三个参数属性应用不同的分页实现
    -->
    <select id="Operator.findPage" resultMap="RMOperator">
        SELECT
        <include refid="Operator.columns"/>
        FROM t_operator
        <include refid="Operator.findPage.where"/>

        <if test="@Ognl@isNotEmpty(sortColumns)">
            ORDER BY ${sortColumns}
        </if>
    </select>


    <select id="Operator.findByQuery" resultMap="RMOperator">
        SELECT
        <include refid="Operator.columns"/>
        FROM t_operator
        <include refid="Operator.findPage.where"/>
        <if test="@Ognl@isNotEmpty(sortColumns)">
            ORDER BY ${sortColumns}
        </if>
    </select>


</mapper>

